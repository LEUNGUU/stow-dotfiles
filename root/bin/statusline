#!/usr/bin/zsh
hn=$(hostname)
function my_date () {
    if [[ "$hn" == "k-nine" ]];
    then
        date +"%d/%m/%Y %I:%M:%S"
    else
        echo "$(date +"%a %d %b %Y %I:%M:%S")"
    fi
}

function my_bat() {
    notify_when=$(echo "$(date +'%M') % 5" | bc)
    bat_level=$( cat /sys/class/power_supply/BAT1/capacity )
    bat_stat=$( cat /sys/class/power_supply/BAT1/status )
    if [[ $(date +'%S') -eq 30 ]]
    then
         if [[ $( echo "$bat_level < 20" | bc) -eq 1 && (  $notify_when -eq 0 )  ]]
         then
             notify-send "Battery low " "$bat_level remaining"
         fi
    fi
    if [[ "$bat_stat" == "Discharging" ]]
    then
        indicator="\xE2\x86\x93"
    else
        indicator="\xE2\x86\x91"
    fi
    echo "B:$bat_level% $indicator"
}

function my_wifi(){
    ssid=$( nmcli | head -n 1 | awk -F ' ' '{print $4}' )
    ip=$($HOME/bin/tmuxip)
    strength=$(wifi_strength)
    if [[ $ssid = 'hide_yo_kids_hide_yo_wi-fi' ]]; then
        msg="\xe2\x8c\x82"
    else
        msg=$ssid
    fi
    echo "N:$msg $strength $ip"
}

function wifi_strength() {
    awk '/[0-9]*/ {if ($3/1 != 0) print $3}' /proc/net/wireless
}

function my_load() {
    load=$(uptime)
    average=("${(@s/ /)load}")
    if [[ "$hn" == "k-nine" ]];
    then
        echo "R:$(free -mh | head -n2 | tail -n 1 | awk '{ print $4}')"
    else
        echo "L:$average[11,-1]"
    fi
}


function my_mail() {
    mailmon
}

function my_weather() {
    if [[ ! "$(cat "$HOME/.cache/weather")" ]];
    then
        $HOME/bin/weather.py > $HOME/.cache/weather
        weather=' W:'$(cat $HOME/.cache/weather)
    fi
    modified_date=$(stat $HOME/.cache/weather | awk '/Modify/ {split($3, arr, ":"); print arr[1]}')
    if [[ ! "$(date +"%H" )" -eq $modified_date ]]
    then
        $HOME/bin/weather.py > $HOME/.cache/weather
        weather=' W:'$(cat $HOME/.cache/weather)
    else
        weather=' W:'$(cat $HOME/.cache/weather)
    fi
    echo $weather
}


function my_update() {
    if [[ ! -e $HOME/.cache/updates ]];
    then
        sudo zypper refresh > $HOME/.cache/update_log
        zypper lu > $HOME/.cache/updates
        updates=' U:'$(cat $HOME/.cache/updates | wc -l)
        notify-send "$(cat $HOME/.cache/update_log)"
    fi
    modified_date=$(stat $HOME/.cache/updates | awk '/Modify/ {split($2, arr, "-"); print arr[3]}')
    if [[ ! "$(date +"%d" )" -eq $modified_date ]]
    then
        sudo zypper refresh > .cache/update_log
        zypper lu > $HOME/.cache/updates
        notify-send "$(cat $HOME/.cache/update_log)"
    else
        sed -e "s/Loading repository data...//g" -i $HOME/.cache/updates
        sed -e "s/Reading installed packages...//g" -i $HOME/.cache/updates
        sed -e "s/No updates found.//g" -i $HOME/.cache/updates
        sed '/--+/d' -i $HOME/.cache/updates
        sed '/Name/d' -i $HOME/.cache/updates
        sed -e "/^$/d" -i $HOME/.cache/updates
        updates=' U:'$(cat -s $HOME/.cache/updates | wc -l )
    fi
    if [[ $( cat $HOME/.cache/updates | wc -l  ) -gt 0 ]]
    then
        echo $updates
    fi
}
function my_volume() {
    echo "V:$( amixer -c 0  -- get Master| awk '/Playback [0-9]{0,5} \[[0-9]{0,3}%]/ {print $4 $6}' )"
}

function dbox() {
    box="$(dropbox status)"
    if [[ $box = "Dropbox isn't running!" ]]
    then
        message="off"

    else
        message="$(echo "$box" | head -n1 )"
    fi
    if [[ $message == "Up to date" ]]
    then
        message="\xe2\x9c\x93"
    fi
    echo "D:$message"
}

if [[ "$hn" == "k-nine" && -n $( cat $HOME/.cache/updates ) && -n $( mailmon ) ]]
then
    line="$(my_update)$(my_mail)"
else
    line="$(my_update)$(my_mail)$(my_weather)"
fi
if [[ "$hn" == "k-nine" ]];
then
line="$line $(my_bat)"
fi
line="$line $(my_wifi) $(dbox) $(my_volume) $(my_date)"


xsetroot -name $line
echo $line
